#Float, Integer, String --> Primitives
print(5);print("Hello");print(2 + 2 );print("What is this?")
print(4.43 + 3.34363254242) #float(ing point decimal) 
print(2 * 4 * 5) # * is multiplication 
print(100/2/4) # / is division
print(2 ** 5) # 2 to the 5th power 
print(100-4-5-50)
print("I love" + " New York.")
print("New York! " * 3)
print(2 + int("32"))
print("2" + str(2))
print(int(float("4.99")))

fname = "Charlie" #string 
lname = "Brown" #strings
age = 10 #integer
print(fname,lname,age)
print(fname + " " + lname + " is " + str(age) + " years old.") #longer string 
#Charlie Brown is 10 years old.
print("{} {} is {} years old.".format(fname,lname,age)) #python 3-ish 
print("%s %s is %s years old." % (fname,lname,age)) #python 2-ish 
MyBio = f"{fname} {lname} is {age} years old."
print(MyBio)

name = "John"
surname = "Rambo"
boro = "Queens"
age = 55
pet = "cat"
pet_name = "Mr. Wiggles"
since = 2005
#John Rambo is 55 years old and lives with his cat, Mr. Wiggles. They have lived in Queens, NY, since 2005.
#John Rambo is 55 and has lived in Queens since 2005. He lives with his hairless cat, Mr. Wiggles.
short_bio = "%s %s is ....."
short_bio = "{} {} is ....."

print("{} is a {} year old {}.".format(pet_name,age-50,pet))

print("100 divided by 6 is equal to {:.2f}.".format(100/6)) #specifier

# built in python functions print, str 
#user defined function
def Mult3(x,y,z):
  P = x * y * z 
  return P


print(Mult3(4,5,6))

#Area of Triangle 

print(4 == 4) #True Boolean True False
print(2 * 2 == 2 + 2 == 3 + 1)
print("5" != 5)
print(5 > 4)
print(10 < 3)

age = 12
#G,PG,PG13,R
rating = "PG13"

def Movie_Permission(age,rating):
  can = "You can watch this movie!"
  cant = "You cannot watch this movie!"
  parent = "You might need a parent to watch this."
  if age >= 18 and rating == "R":
    print(can)
  elif age >= 13 and rating == "PG13":
    print(can)
  elif age >= 5 and rating == "PG":
    print(parent)
  elif rating == "G":
    print(can)
  else: 
    print(cant)
  

Movie_Permission(14,"PG13")


rain = False
cold = False
wind = False
warm_clothes = False 

def Can_I_Go_Out(rain,cold,wind,warm_clothes):
  can = "You can go out to eat."
  cant = "You can't go out to eat."
  if cold and warm_clothes:
    print(can)
  elif wind and warm_clothes: 
    print(can)
  elif not rain and not cold and not wind:
    print(can)
  else:
    print(cant)

Can_I_Go_Out(False,True,True,False)

#Primitives 
#FLoat, integers, booleans, and strings 
3.4444
5
False 
"What's up, Doc?"
#sets, tuples, dictionaries, lists
#is it mutable 
#is it ordered/indexable 
Beatles = ["john","paul","george","ringo"]
print(Beatles)
numbers = [1,2,33,44,55,77,44.44,55.55]
print(numbers)

print(Beatles[0])
print(Beatles[1])
print(Beatles[-1])
print(Beatles[-2])

print(Beatles[:]) #Slicing a list 

Beatles[0] = "John"
Beatles[1] = "Paul"
print(Beatles)
Beatles.append("bob")  #method object.method() 
print(Beatles)
Beatles.insert(0,"joe")
print(Beatles)

Beatles.insert(2,"gary")
print(Beatles)

Beatles.pop(0)
Beatles.remove("bob")
print(Beatles)
#append, insert 
#pop, remove 

nums1 = [1,2]
nums2 = [3,4]
print(nums1 + nums2)
print(nums2 + nums1)

#iterables 
#for loop 
for b in Beatles:
  print("%s is cool." % b)


# nums = [1,2,3,4,5,6,7,8,9]
# for cats in nums:
#   print("%s is the square of %s" % (cats**2, cats))

print(8 % 5) #modulo mod
#What are factors of 8 
list1 = [1,2,3,4,5,6,7,8]
factors = []
for num in list1:
  if list1[-1] % num == 0:
    factors.append(num)
print(factors)

def factor_finder(n):
  factors = [] 
  for i in range(1, n + 1):
    if n % i == 0:
      factors.append(i)
  return factors 

def common_factors(x,y):
  fx = factor_finder(x)
  fy = factor_finder(y)
  common_factors = []
  for n in fx:
    if n in fy:
      common_factors.append(n)
  return common_factors 

print(common_factors(1320,45))